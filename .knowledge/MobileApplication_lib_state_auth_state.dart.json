{"is_source_file": true, "format": "Dart", "description": "This source file defines the AuthUser model class and the AuthState class for managing authentication state in a Flutter application. It includes methods for initialization, login, registration, logout, and handling unauthorized responses, with dependency injection for testability.", "external_files": ["package:flutter/foundation.dart", "package:MobileApplication/core/api_client.dart", "package:MobileApplication/core/storage/secure_storage.dart"], "external_methods": ["SecureStorage.readToken", "SecureStorage.writeToken", "SecureStorage.deleteToken", "ApiClient.configure", "kDebugMode"], "published": ["AuthUser", "AuthState"], "classes": [{"name": "AuthUser", "description": "Immutable class representing a user with id, name, and email, including methods for creating an instance from a map and converting to a map."}, {"name": "AuthState", "description": "State management class extending ChangeNotifier, handling authentication logic including initialization, login, registration, logout, and unauthorized handling, with dependency injection for storage and API interaction."}], "methods": [{"name": "AuthUser.fromMap", "description": "Creates an AuthUser instance from a Map with dynamic values."}, {"name": "AuthUser.toMap", "description": "Converts the AuthUser instance into a Map."}, {"name": "AuthState.initializeAuth", "description": "Initializes auth state by reading stored token and setting authentication status."}, {"name": "AuthState.register", "description": "Stub method for registering a user, simulates registration, and sets token and user data."}, {"name": "AuthState.login", "description": "Stub method for user login, simulates login and sets token and user info."}, {"name": "AuthState.logout", "description": "Clears token and resets authentication state."}, {"name": "AuthState.clearError", "description": "Resets the error message used for UI error handling."}, {"name": "_handleUnauthorizedFromInterceptor", "description": "Handles 401 unauthorized responses by resetting auth state and invoking fallback callback."}, {"name": "_setLoading", "description": "Updates loading state and notifies listeners."}], "calls": ["SecureStorage.readToken", "SecureStorage.writeToken", "SecureStorage.deleteToken", "ApiClient.configure", "notifyListeners"], "search-terms": ["auth state management", "Flutter authentication", "token storage", "AuthUser class", "AuthState class", "initializeAuth", "stub login", "stub registration", "handle unauthorized", "dependency injection"], "state": 2, "file_id": 119, "knowledge_revision": 263, "git_revision": "", "revision_history": [{"260": ""}, {"263": ""}], "hash": "edacd0b7c3788aba11d9e2e7f5e4bdf5", "format-version": 4, "code-base-name": "MobileApplication", "filename": "MobileApplication/lib/state/auth_state.dart"}