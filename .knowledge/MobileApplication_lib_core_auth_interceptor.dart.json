{"is_source_file": true, "format": "Dart", "description": "This file defines the AuthInterceptor class, a Dio interceptor for handling JWT authentication tokens and authorization errors within a Flutter or Dart-based mobile application. It attaches tokens to outgoing requests and manages 401 Unauthorized errors.", "external_files": ["package:dio/dio.dart", "package:MobileApplication/core/storage/secure_storage.dart"], "external_methods": ["SecureStorage.getToken()", "SecureStorage.deleteToken()", "SecureStorage.deleteUserId()"], "published": ["AuthInterceptor"], "classes": [{"name": "AuthInterceptor", "description": "A Dio interceptor that attaches JWT tokens to requests and handles unauthorized errors."}], "methods": [{"name": "AuthInterceptor", "description": "Constructor for AuthInterceptor, accepts a SecureStorage instance and optional onUnauthorized callback."}, {"name": "onRequest", "description": "Interception method that attaches the JWT token to request headers unless the request is for login or registration endpoints."}, {"name": "onError", "description": "Handles Dio exceptions, specifically 401 Unauthorized responses, to clear stored tokens and trigger unauthorized handling."}], "calls": ["SecureStorage.getToken()", "SecureStorage.deleteToken()", "SecureStorage.deleteUserId()"], "search-terms": ["auth", "interceptor", "JWT", "Dio", "Authorization", "401", "token handling", "Flutter security"], "state": 2, "file_id": 7, "knowledge_revision": 17, "git_revision": "", "hash": "e54881a1fa8d71ee0e166833b1a868da", "format-version": 4, "code-base-name": "MobileApplication", "filename": "MobileApplication/lib/core/auth_interceptor.dart", "revision_history": [{"17": ""}]}