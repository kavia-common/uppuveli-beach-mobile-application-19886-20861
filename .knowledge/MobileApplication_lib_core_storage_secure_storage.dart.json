{"is_source_file": true, "format": "Dart", "description": "This Dart file defines a wrapper class 'SecureStorage' around the 'flutter_secure_storage' package to manage sensitive data securely in a Flutter application. It provides methods to read, write, delete, and clear secure tokens, and handles platform-specific options.", "external_files": ["package:flutter_secure_storage/flutter_secure_storage.dart"], "external_methods": ["FlutterSecureStorage.read", "FlutterSecureStorage.write", "FlutterSecureStorage.delete", "FlutterSecureStorage.deleteAll"], "published": ["SecureStorage"], "classes": [{"name": "SecureStorage", "description": "A utility class for securely managing sensitive data such as authentication tokens across different platforms using flutter_secure_storage."}], "methods": [{"name": "readToken", "description": "Reads the stored JWT token if present; returns null otherwise."}, {"name": "writeToken", "description": "Persistently stores the provided JWT token securely."}, {"name": "deleteToken", "description": "Deletes the stored JWT token."}, {"name": "clearAll", "description": "Clears all secure storage keys for the app."}, {"name": "override", "description": "Setter to override the storage instance, primarily for testing purposes."}], "calls": ["FlutterSecureStorage.read", "FlutterSecureStorage.write", "FlutterSecureStorage.delete", "FlutterSecureStorage.deleteAll"], "search-terms": ["SecureStorage", "flutter_secure_storage", "token management", "platform-specific options", "secure data storage"], "state": 2, "file_id": 116, "knowledge_revision": 254, "git_revision": "", "hash": "731200e99b2d217234a6a931dae3a7a2", "format-version": 4, "code-base-name": "MobileApplication", "filename": "MobileApplication/lib/core/storage/secure_storage.dart", "revision_history": [{"254": ""}]}